{"version":3,"sources":["graphql/getCharacterQuery.js","utils/hooks/useGetCharacter.js","Views/Character/Character.js","utils/contexts/counter-context.js","graphql/getCharactersQuery.js","utils/hooks/useGetCharacters.js","Views/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["GET_CHARACTER","gql","useGetCharacter","id","useState","character","setCharacter","useQuery","variables","loading","data","useEffect","StyledLoading","styled","p","Container","div","ButtonContainer","Image","img","Name","h1","TitleItem","h4","ItemInfo","StyledLink","Link","Character","useParams","to","image","src","alt","name","species","gender","location","origin","status","episode","length","CounterContext","createContext","CounterProvider","children","counter","setCounter","Provider","value","GET_CHARACTERS","useGetCharacters","useContext","characters","setCharacters","useLazyQuery","page","getCharacters","results","getNextPage","getPreviousPage","Button","button","AvatarContainer","Avatar","Home","onClick","map","Title","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2ad97bc.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_CHARACTER = gql`\n  query character($id: ID!) {\n    character(id: $id) {\n      name\n      image\n      gender\n      location {\n        name\n      }\n      origin {\n        name\n      }\n      status\n      species\n      episode {\n        id\n        episode\n      }\n    }\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_CHARACTER } from \"../../graphql/getCharacterQuery\";\n\nconst useGetCharacter = (id) => {\n  debugger;\n  const [character, setCharacter] = useState({});\n\n  const { loading, data } = useQuery(GET_CHARACTER, {\n    variables: { id },\n  });\n\n  useEffect(() => {\n    setCharacter(data);\n  }, [data]);\n\n  return { character, loading };\n};\n\nexport default useGetCharacter;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useGetCharacter from \"../../utils/hooks/useGetCharacter\";\n\nconst StyledLoading = styled.p`\n  font-size: 22px;\n  color: #539bf5;\n`;\n\nconst Container = styled.div`\n  margin-bottom: 50px;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Image = styled.img`\n  margin-top: 20px;\n  height: 200px;\n  border-radius: 50%;\n  border: 5px solid #539bf5;\n`;\n\nconst Name = styled.h1`\n  color: #539bf5;\n`;\n\nconst TitleItem = styled.h4`\n  color: #539bf5;\n  margin-bottom: -10px;\n`;\n\nconst ItemInfo = styled.p`\n  color: white;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #539bf5;\n  border: 1px solid #539bf5;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 4px;\n`;\n\nexport const Character = () => {\n  let { id } = useParams();\n\n  const { character, loading } = useGetCharacter(id);\n\n  return (\n    <>\n      {loading ? (\n        <StyledLoading>Loading...</StyledLoading>\n      ) : (\n        <Container>\n          <ButtonContainer>\n            <StyledLink to=\"/\">{`< Back`}</StyledLink>\n          </ButtonContainer>\n          <div data-testid=\"character-container\">\n            {character?.character?.image && (\n              <Image\n                src={character?.character?.image}\n                alt={`${character?.character?.name}-image`}\n                data-testid=\"character-image\"\n              />\n            )}\n            {character?.character?.name && (\n              <Name>{character?.character?.name}</Name>\n            )}\n            {character?.character?.species && (\n              <div>\n                <TitleItem>Species:</TitleItem>\n                <ItemInfo>{character?.character?.species}</ItemInfo>\n              </div>\n            )}\n            {character?.character?.gender && (\n              <div>\n                <TitleItem>Genre:</TitleItem>\n                <ItemInfo>{character?.character?.gender}</ItemInfo>\n              </div>\n            )}\n            {character?.character?.location?.name && (\n              <div>\n                <TitleItem>Location:</TitleItem>\n                <ItemInfo>{character?.character?.location.name}</ItemInfo>\n              </div>\n            )}\n            {character?.character?.origin?.name && (\n              <div>\n                <TitleItem>Origin:</TitleItem>\n                <ItemInfo>{character?.character?.origin.name}</ItemInfo>\n              </div>\n            )}\n            {character?.character?.status && (\n              <div>\n                <TitleItem>Status:</TitleItem>\n                <ItemInfo>{character?.character?.status}</ItemInfo>\n              </div>\n            )}\n            {character?.character?.episode?.length && (\n              <div>\n                <TitleItem>Appears in:</TitleItem>\n                <ItemInfo>{`${character?.character?.episode.length} episodes`}</ItemInfo>\n              </div>\n            )}\n          </div>\n        </Container>\n      )}\n    </>\n  );\n};\n","import React, { createContext, useState } from \"react\";\n\nconst CounterContext = createContext(0);\n\nconst CounterProvider = ({ children }) => {\n  const [counter, setCounter] = useState(1);\n\n  return (\n    <CounterContext.Provider\n      value={{\n        counter,\n        setCounter,\n      }}\n    >\n      {children}\n    </CounterContext.Provider>\n  );\n};\n\nexport { CounterProvider, CounterContext };\n","import { gql } from \"@apollo/client\";\n\nexport const GET_CHARACTERS = gql`\n  query characters($page: Int) {\n    characters(page: $page) {\n      results {\n        name\n        image\n        id\n      }\n    }\n  }\n`;\n","import { useState, useEffect, useContext } from \"react\";\nimport { CounterContext } from \"../contexts/counter-context\";\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_CHARACTERS } from \"../../graphql/getCharactersQuery\";\n\nconst useGetCharacters = () => {\n  const { counter, setCounter } = useContext(CounterContext);\n  const [characters, setCharacters] = useState([]);\n\n  const [getCharacters, { loading, data }] = useLazyQuery(GET_CHARACTERS, {\n    variables: { page: counter },\n  });\n\n  const getNextPage = () => {\n    setCounter(counter + 1);\n    getCharacters();\n  };\n\n  const getPreviousPage = () => {\n    if (counter > 0) {\n      setCounter(counter - 1);\n    }\n    getCharacters();\n  };\n\n  useEffect(() => {\n    getCharacters();\n  }, [getCharacters]);\n\n  useEffect(() => {\n    if (data) {\n      setCharacters(data.characters.results);\n    }\n  }, [data]);\n\n  return { characters, loading, counter, getNextPage, getPreviousPage };\n};\n\nexport default useGetCharacters;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useGetCharacters from \"../../utils/hooks/useGetCharacters\";\n\nconst StyledLoading = styled.p`\n  font-size: 22px;\n  color: #539bf5;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n  width: 100px;\n  border: 1px solid #539bf5;\n  border-radius: 5px;\n  padding: 10px 5px;\n  color: #539bf5;\n  background-color: transparent;\n  text-decoration: none;\n  margin-right: 5px;\n  margin-left: 5px;\n`;\n\nconst AvatarContainer = styled.div`\n  text-align: center;\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 70%;\n`;\n\nconst Avatar = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin: auto;\n  margin-bottom: 20px;\n  align-items: center;\n  border: 1px solid #539bf5;\n  border-radius: 10px;\n  padding: 20px 10px 10px 10px;\n  width: 200px;\n`;\n\nconst Image = styled.img`\n  height: 80px;\n  width: 80px;\n  border: 5px solid #539bf5;\n  border-radius: 50%;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #539bf5;\n`;\n\nexport const Home = () => {\n  const { characters, loading, counter, getNextPage, getPreviousPage } =\n    useGetCharacters();\n\n  return (\n    <>\n      {loading ? (\n        <StyledLoading>Loading...</StyledLoading>\n      ) : (\n        <Container>\n          <ButtonContainer>\n            {counter > 1 && (\n              <Button\n                onClick={() => getPreviousPage()}\n                data-testid=\"previous-button\"\n              >{`< Previous`}</Button>\n            )}\n            {counter < 34 && (\n              <Button\n                onClick={() => getNextPage()}\n                data-testid=\"next-button\"\n              >{`Next >`}</Button>\n            )}\n          </ButtonContainer>\n          <AvatarContainer>\n            {characters?.map((character) => {\n              return (\n                <Avatar key={character.id} data-testid=\"avatar-container\">\n                  <StyledLink to={`/character/${character.id}`}>\n                    <Image\n                      src={character.image}\n                      alt={`${character.name}-image`}\n                      data-testid=\"avatar-image\"\n                    />\n                    <p>{character.name}</p>\n                  </StyledLink>\n                </Avatar>\n              );\n            })}\n          </AvatarContainer>\n          <ButtonContainer>\n            {counter > 1 && (\n              <Button\n                onClick={() => getPreviousPage()}\n                data-testid=\"previous-button\"\n              >{`< Previous`}</Button>\n            )}\n            {counter < 34 && (\n              <Button\n                onClick={() => getNextPage()}\n                data-testid=\"next-button\"\n              >{`Next >`}</Button>\n            )}\n          </ButtonContainer>\n        </Container>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { Character } from \"./Views/Character\";\nimport { Home } from \"./Views/Home\";\nimport { CounterProvider } from \"./utils/contexts/counter-context\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  color: #539bf5;\n  margin-bottom: 50px;\n`;\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache(),\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <HashRouter basename=\"/\">\n        <Container>\n          <Title>The Rick and Morty bible</Title>\n          <CounterProvider>\n            <Switch>\n              <Route exact={true} path=\"/\" children={<Home />} />\n              <Route path=\"/character/:id\" children={<Character />} />\n            </Switch>\n          </CounterProvider>\n        </Container>\n      </HashRouter>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}