{"version":3,"sources":["graphql/getCharacterQuery.js","utils/hooks/useGetCharacter.js","Views/Character/Character.js","utils/contexts/counter-context.js","graphql/getCharactersQuery.js","utils/hooks/useGetCharacters.js","Views/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["GET_CHARACTER","gql","useGetCharacter","id","useQuery","variables","loading","data","StyledLoading","styled","p","Container","div","ButtonContainer","Image","img","Name","h1","TitleItem","h4","ItemInfo","StyledLink","Link","Character","useParams","to","character","image","src","alt","name","species","gender","location","origin","status","episode","length","CounterContext","createContext","CounterProvider","children","useState","counter","setCounter","Provider","value","GET_CHARACTERS","useGetCharacters","useContext","page","getNextPage","getPreviousPage","Button","button","AvatarContainer","Avatar","Home","onClick","characters","results","map","Title","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10b69c67.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_CHARACTER = gql`\n  query character($id: ID!) {\n    character(id: $id) {\n      name\n      image\n      gender\n      location {\n        name\n      }\n      origin {\n        name\n      }\n      status\n      species\n      episode {\n        id\n        episode\n      }\n    }\n  }\n`;\n","import { useQuery } from \"@apollo/client\";\nimport { GET_CHARACTER } from \"../../graphql/getCharacterQuery\";\n\nconst useGetCharacter = (id) => {\n  const { loading, data } = useQuery(GET_CHARACTER, {\n    variables: { id },\n  });\n\n  return { data, loading };\n};\n\nexport default useGetCharacter;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useGetCharacter from \"../../utils/hooks/useGetCharacter\";\n\nconst StyledLoading = styled.p`\n  font-size: 22px;\n  color: #539bf5;\n`;\n\nconst Container = styled.div`\n  margin-bottom: 50px;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Image = styled.img`\n  margin-top: 20px;\n  height: 200px;\n  border-radius: 50%;\n  border: 5px solid #539bf5;\n`;\n\nconst Name = styled.h1`\n  color: #539bf5;\n`;\n\nconst TitleItem = styled.h4`\n  color: #539bf5;\n  margin-bottom: -10px;\n`;\n\nconst ItemInfo = styled.p`\n  color: white;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #539bf5;\n  border: 1px solid #539bf5;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 4px;\n`;\n\nexport const Character = () => {\n  let { id } = useParams();\n\n  const { data, loading } = useGetCharacter(id);\n\n  return (\n    <>\n      {loading ? (\n        <StyledLoading>Loading...</StyledLoading>\n      ) : (\n        <Container>\n          <ButtonContainer>\n            <StyledLink to=\"/\">{`< Back`}</StyledLink>\n          </ButtonContainer>\n          <div data-testid=\"character-container\">\n            {data?.character?.image && (\n              <Image\n                src={data?.character?.image}\n                alt={`${data?.character?.name}-image`}\n                data-testid=\"character-image\"\n              />\n            )}\n            {data?.character?.name && <Name>{data?.character?.name}</Name>}\n            {data?.character?.species && (\n              <div>\n                <TitleItem>Species:</TitleItem>\n                <ItemInfo>{data?.character?.species}</ItemInfo>\n              </div>\n            )}\n            {data?.character?.gender && (\n              <div>\n                <TitleItem>Genre:</TitleItem>\n                <ItemInfo>{data?.character?.gender}</ItemInfo>\n              </div>\n            )}\n            {data?.character?.location?.name && (\n              <div>\n                <TitleItem>Location:</TitleItem>\n                <ItemInfo>{data?.character?.location.name}</ItemInfo>\n              </div>\n            )}\n            {data?.character?.origin?.name && (\n              <div>\n                <TitleItem>Origin:</TitleItem>\n                <ItemInfo>{data?.character?.origin.name}</ItemInfo>\n              </div>\n            )}\n            {data?.character?.status && (\n              <div>\n                <TitleItem>Status:</TitleItem>\n                <ItemInfo>{data?.character?.status}</ItemInfo>\n              </div>\n            )}\n            {data?.character?.episode?.length && (\n              <div>\n                <TitleItem>Appears in:</TitleItem>\n                <ItemInfo>{`${data?.character?.episode.length} episodes`}</ItemInfo>\n              </div>\n            )}\n          </div>\n        </Container>\n      )}\n    </>\n  );\n};\n","import React, { createContext, useState } from \"react\";\n\nconst CounterContext = createContext(0);\n\nconst CounterProvider = ({ children }) => {\n  const [counter, setCounter] = useState(1);\n\n  return (\n    <CounterContext.Provider\n      value={{\n        counter,\n        setCounter,\n      }}\n    >\n      {children}\n    </CounterContext.Provider>\n  );\n};\n\nexport { CounterProvider, CounterContext };\n","import { gql } from \"@apollo/client\";\n\nexport const GET_CHARACTERS = gql`\n  query characters($page: Int) {\n    characters(page: $page) {\n      results {\n        name\n        image\n        id\n      }\n    }\n  }\n`;\n","import { useContext } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { CounterContext } from \"../contexts/counter-context\";\nimport { GET_CHARACTERS } from \"../../graphql/getCharactersQuery\";\n\nconst useGetCharacters = () => {\n  const { counter, setCounter } = useContext(CounterContext);\n  const { loading, data } = useQuery(GET_CHARACTERS, {\n    variables: { page: counter },\n  });\n\n  const getNextPage = () => {\n    setCounter(counter + 1);\n  };\n\n  const getPreviousPage = () => {\n    if (counter > 0) {\n      setCounter(counter - 1);\n    }\n  };\n\n  return { data, loading, counter, getNextPage, getPreviousPage };\n};\n\nexport default useGetCharacters;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useGetCharacters from \"../../utils/hooks/useGetCharacters\";\n\nconst StyledLoading = styled.p`\n  font-size: 22px;\n  color: #539bf5;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n  width: 100px;\n  border: 1px solid #539bf5;\n  border-radius: 5px;\n  padding: 10px 5px;\n  color: #539bf5;\n  background-color: transparent;\n  text-decoration: none;\n  margin-right: 5px;\n  margin-left: 5px;\n`;\n\nconst AvatarContainer = styled.div`\n  text-align: center;\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 70%;\n`;\n\nconst Avatar = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin: auto;\n  margin-bottom: 20px;\n  align-items: center;\n  border: 1px solid #539bf5;\n  border-radius: 10px;\n  padding: 20px 10px 10px 10px;\n  width: 200px;\n`;\n\nconst Image = styled.img`\n  height: 80px;\n  width: 80px;\n  border: 5px solid #539bf5;\n  border-radius: 50%;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #539bf5;\n`;\n\nexport const Home = () => {\n  const { data, loading, counter, getNextPage, getPreviousPage } =\n    useGetCharacters();\n\n  return (\n    <>\n      {loading ? (\n        <StyledLoading>Loading...</StyledLoading>\n      ) : (\n        <Container>\n          <ButtonContainer>\n            {counter > 1 && (\n              <Button\n                onClick={() => getPreviousPage()}\n                data-testid=\"previous-button\"\n              >{`< Previous`}</Button>\n            )}\n            {counter < 34 && (\n              <Button\n                onClick={() => getNextPage()}\n                data-testid=\"next-button\"\n              >{`Next >`}</Button>\n            )}\n          </ButtonContainer>\n          <AvatarContainer>\n            {data?.characters?.results?.map((character) => {\n              return (\n                <Avatar key={character.id} data-testid=\"avatar-container\">\n                  <StyledLink to={`/character/${character.id}`}>\n                    <Image\n                      src={character.image}\n                      alt={`${character.name}-image`}\n                      data-testid=\"avatar-image\"\n                    />\n                    <p>{character.name}</p>\n                  </StyledLink>\n                </Avatar>\n              );\n            })}\n          </AvatarContainer>\n          <ButtonContainer>\n            {counter > 1 && (\n              <Button\n                onClick={() => getPreviousPage()}\n                data-testid=\"previous-button\"\n              >{`< Previous`}</Button>\n            )}\n            {counter < 34 && (\n              <Button\n                onClick={() => getNextPage()}\n                data-testid=\"next-button\"\n              >{`Next >`}</Button>\n            )}\n          </ButtonContainer>\n        </Container>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { Character } from \"./Views/Character\";\nimport { Home } from \"./Views/Home\";\nimport { CounterProvider } from \"./utils/contexts/counter-context\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  color: #539bf5;\n  margin-bottom: 50px;\n`;\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache(),\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <HashRouter basename=\"/\">\n        <Container>\n          <Title>The Rick and Morty bible</Title>\n          <CounterProvider>\n            <Switch>\n              <Route exact={true} path=\"/\" children={<Home />} />\n              <Route path=\"/character/:id\" children={<Character />} />\n            </Switch>\n          </CounterProvider>\n        </Container>\n      </HashRouter>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}