{"version":3,"sources":["utils/hooks/useGetCharacter.js","Views/Character/Character.js","utils/contexts/counter-context.js","graphql/getCharactersQuery.js","utils/hooks/useGetCharacters.js","Views/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useGetCharacter","id","useState","character","setCharacter","isLoading","setIsLoading","useEffect","axios","get","then","res","data","finally","StyledLoading","styled","p","Image","img","Name","h1","TitleItem","h4","ItemInfo","StyledLink","Link","Character","useParams","src","image","alt","name","species","gender","location","origin","status","episode","length","to","CounterContext","createContext","CounterProvider","children","counter","setCounter","Provider","value","GET_CHARACTERS","gql","useGetCharacters","useContext","characters","setCharacters","useLazyQuery","variables","page","getCharacters","loading","results","getNextPage","getPreviousPage","Container","div","ButtonContainer","Button","button","AvatarContainer","Avatar","Home","onClick","map","Title","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76cdf1ba.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useGetCharacter = (id) => {\n  const [character, setCharacter] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(`https://rickandmortyapi.com/api/character/${id}`)\n      .then((res) => {\n        setCharacter(res.data);\n      })\n      .finally(() => setIsLoading(false));\n  }, [id]);\n\n  return { character, isLoading };\n};\n\nexport default useGetCharacter;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useGetCharacter from \"../../utils/hooks/useGetCharacter\";\n\nconst StyledLoading = styled.p`\n  font-size: 22px;\n  color: #539bf5;\n`;\n\nconst Image = styled.img`\n  margin-top: 20px;\n  height: 200px;\n  border-radius: 50%;\n  border: 5px solid #539bf5;\n`;\n\nconst Name = styled.h1`\n  color: #539bf5;\n`;\n\nconst TitleItem = styled.h4`\n  color: #539bf5;\n  margin-bottom: -10px;\n`;\n\nconst ItemInfo = styled.p`\n  color: white;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #539bf5;\n  border: 1px solid #539bf5;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 4px;\n`;\n\nexport const Character = () => {\n  let { id } = useParams();\n\n  const { character, isLoading } = useGetCharacter(id);\n\n  return (\n    <>\n      {isLoading ? (\n        <StyledLoading>Loading...</StyledLoading>\n      ) : (\n        <div data-testid=\"character-container\">\n          <Image\n            src={character.image}\n            alt={`${character.name}-image`}\n            data-testid=\"character-image\"\n          />\n          <Name>{character.name}</Name>\n          <div>\n            <TitleItem>Species:</TitleItem>\n            <ItemInfo>{character.species}</ItemInfo>\n          </div>\n          <div>\n            <TitleItem>Genre:</TitleItem>\n            <ItemInfo>{character.gender}</ItemInfo>\n          </div>\n          {character.location?.name && (\n            <div>\n              <TitleItem>Location:</TitleItem>\n              <ItemInfo>{character.location.name}</ItemInfo>\n            </div>\n          )}\n          {character.origin?.name && (\n            <div>\n              <TitleItem>Origin:</TitleItem>\n              <ItemInfo>{character.origin.name}</ItemInfo>\n            </div>\n          )}\n          {character.status && (\n            <div>\n              <TitleItem>Status:</TitleItem>\n              <ItemInfo>{character.status}</ItemInfo>\n            </div>\n          )}\n          {character.episode?.length && (\n            <div>\n              <TitleItem>Appears in:</TitleItem>\n              <ItemInfo>{`${character.episode.length} episodes`}</ItemInfo>\n            </div>\n          )}\n          <StyledLink to=\"/\">Back</StyledLink>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { createContext, useState } from \"react\";\n\nconst CounterContext = createContext(0);\n\nconst CounterProvider = ({ children }) => {\n  const [counter, setCounter] = useState(1);\n\n  return (\n    <CounterContext.Provider\n      value={{\n        counter,\n        setCounter,\n      }}\n    >\n      {children}\n    </CounterContext.Provider>\n  );\n};\n\nexport { CounterProvider, CounterContext };\n","import { gql } from \"@apollo/client\";\n\nexport const GET_CHARACTERS = gql`\n  query characters($page: Int) {\n    characters(page: $page) {\n      results {\n        name\n        image\n        id\n      }\n    }\n  }\n`;\n","import { useState, useEffect, useContext } from \"react\";\nimport { CounterContext } from \"../contexts/counter-context\";\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_CHARACTERS } from \"../../graphql/getCharactersQuery\";\n\nconst useGetCharacters = () => {\n  const { counter, setCounter } = useContext(CounterContext);\n  const [characters, setCharacters] = useState([]);\n\n  const [getCharacters, { loading, data }] = useLazyQuery(GET_CHARACTERS, {\n    variables: { page: counter },\n  });\n\n  const getNextPage = () => {\n    setCounter(counter + 1);\n    getCharacters();\n  };\n\n  const getPreviousPage = () => {\n    if (counter > 0) {\n      setCounter(counter - 1);\n    }\n    getCharacters();\n  };\n\n  useEffect(() => {\n    getCharacters();\n  }, [getCharacters]);\n\n  useEffect(() => {\n    if (data) {\n      setCharacters(data.characters.results);\n    }\n  }, [data]);\n\n  return { characters, loading, getNextPage, getPreviousPage };\n};\n\nexport default useGetCharacters;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useGetCharacters from \"../../utils/hooks/useGetCharacters\";\n\nconst StyledLoading = styled.p`\n  font-size: 22px;\n  color: #539bf5;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n  width: 100px;\n  border: 1px solid #539bf5;\n  border-radius: 5px;\n  padding: 10px 5px;\n  color: #539bf5;\n  background-color: transparent;\n  text-decoration: none;\n  margin-right: 10px;\n`;\n\nconst AvatarContainer = styled.div`\n  text-align: center;\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 70%;\n`;\n\nconst Avatar = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin: auto;\n  margin-bottom: 20px;\n  align-items: center;\n  border: 1px solid #539bf5;\n  border-radius: 10px;\n  padding: 30px 5px;\n  width: 200px;\n`;\n\nconst Image = styled.img`\n  height: 80px;\n  width: 80px;\n  border: 5px solid #539bf5;\n  border-radius: 50%;\n  margin-bottom: 5px;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #539bf5;\n`;\n\nexport const Home = () => {\n  const { characters, loading, getNextPage, getPreviousPage } =\n    useGetCharacters();\n\n  return (\n    <>\n      {loading ? (\n        <StyledLoading>Loading...</StyledLoading>\n      ) : (\n        <Container>\n          <ButtonContainer>\n            <Button onClick={() => getPreviousPage()}>{`< Previous`}</Button>\n            <Button onClick={() => getNextPage()}>{`Next >`}</Button>\n          </ButtonContainer>\n          <AvatarContainer>\n            {characters?.map((character) => {\n              return (\n                <Avatar key={character.id} data-testid=\"avatar-container\">\n                  <Image\n                    src={character.image}\n                    alt={`${character.name}-image`}\n                    data-testid=\"avatar-image\"\n                  />\n                  <StyledLink to={`/character/${character.id}`}>\n                    {character.name}\n                  </StyledLink>\n                </Avatar>\n              );\n            })}\n          </AvatarContainer>\n        </Container>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { Character } from \"./Views/Character\";\nimport { Home } from \"./Views/Home\";\nimport { CounterProvider } from \"./utils/contexts/counter-context\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  color: #539bf5;\n  margin-bottom: 50px;\n`;\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache(),\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <HashRouter basename=\"/\">\n        <Container>\n          <Title>The Rick and Morty bible</Title>\n          <CounterProvider>\n            <Switch>\n              <Route exact={true} path=\"/\" children={<Home />} />\n              <Route path=\"/character/:id\" children={<Character />} />\n            </Switch>\n          </CounterProvider>\n        </Container>\n      </HashRouter>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}